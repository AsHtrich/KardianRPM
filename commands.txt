uvicorn main:app --reload

sudo lsof -t -i tcp:8000 | xargs kill -9

killall -9 node 

1. Heart rate
2. 
3. 


<div className=' w-full flex-row flex'>
            <div className='w-2/3 flex flex-row'>
                <div className='w-4/5 p-4 mt-4 mx-2 border rounded-3xl flex flex-col space-y-2 border-grey h-[300px]'>
                    <h1 className='text-xl font-normal'>
                    Patient Details for ID: {patientID}
                    </h1>
                    <h1 className='text-4xl font-bold'>
                        {patient.name}
                    </h1>
                    <div className='bg-green-100 text-black p-4 rounded-3xl font-semibold flex flex-col space-y-1 text-xl'>
                    <h1>
                        Ph no.: {patient.pno}
                    </h1>
                    <h1>
                        Disease description: {patient.desc}
                    </h1>
                    <h1>
                    Address: {patient.address}
                    </h1>
                    <h1>
                        Rel's Name: {patient.Relname}
                    </h1>
                    <h1>
                        Rel's no: {patient.Relpno}
                    </h1>
                    </div>
                    
                </div>
                <div className='w-1/5 p-4 mt-4 mx-2 border rounded-3xl flex flex-col space-y-2 border-grey h-[300px]'>

                </div>   
            </div>
            
            <div className="map-container w-1/3 border-black border mt-4 mx-2">
            <MyLeafletMap />
            </div>
            
        </div>
        <div className=' w-full flex flex-row rounded-3xl border-grey border px-16 space-x-8 items-center justify-between justify-items-stretch mx-2 mt-2 h-[70px]'>
            <h1 className='text-xl font-semibold'>DeviceID: {patient.deviceID}</h1>
            <h1 className='text-xl font-semibold'>Device name: XYZ</h1>
            <h1 className='text-xl font-semibold'>Battery: 80%</h1>
            <h1 className='text-xl font-semibold'>No of days used: 40d</h1>
        </div>
        <div className=' w-full flex flex-row rounded-3xl m-2 border-grey border space-x-8 items-center justify-between justify-items-stretch mx-auto h-[400px]'>
            
        </div> 











        import React, { useState } from 'react';

const Prescriptions = () => {
    const [formData, setFormData] = useState({
        patientName: '',
        age: '',
        date: new Date().toISOString().split('T')[0],
        medication: '',
        dosage: '',
        frequency: '',
        duration: '',
        form: 'tablet',
        instructions: '',
      });
      
      const [prescriptions, setPrescriptions] = useState([]);
    
      const handleChange = (e) => {
        setFormData({
          ...formData,
          [e.target.name]: e.target.value,
        });
      };
    
      const handleSubmit = (e) => {
        e.preventDefault();
        setPrescriptions([...prescriptions, formData]); // Save the prescription
        setFormData({  // Reset form fields
          patientName: '',
          age: '',
          date: new Date().toISOString().split('T')[0],
          medication: '',
          dosage: '',
          frequency: '',
          duration: '',
          form: 'tablet',
          instructions: '',
        });
        alert("Prescription saved successfully!");
      };

      
  return (
    <div className="border border-black w-[75%] flex m-1">
      {/* Left Component: Form */}
      <div className="w-1/2 mx-auto bg-white p-6 shadow-md rounded-md">
        <h2 className="text-2xl font-bold mb-6 text-gray-800">Add Prescription</h2>
        <form onSubmit={handleSubmit} className="space-y-2">
          <div>
            <label className="block text-gray-700">Patient Name:</label>
            <input type="text" name="patientName" value={formData.patientName} onChange={handleChange} required
                   className="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400" />
          </div>

          <div>
            <label className="block text-gray-700">Age:</label>
            <input type="number" name="age" value={formData.age} onChange={handleChange} required
                   className="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400" />
          </div>

          <div>
            <label className="block text-gray-700">Date:</label>
            <input type="date" name="date" value={formData.date} onChange={handleChange} required
                   className="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400" />
          </div>

          <div>
            <label className="block text-gray-700">Medication:</label>
            <input type="text" name="medication" value={formData.medication} onChange={handleChange} required
                   className="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400" />
          </div>

          <div>
            <label className="block text-gray-700">Dosage (e.g., 500 mg):</label>
            <input type="text" name="dosage" value={formData.dosage} onChange={handleChange} required
                   className="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400" />
          </div>

          <div>
            <label className="block text-gray-700">Frequency (e.g., twice daily):</label>
            <input type="text" name="frequency" value={formData.frequency} onChange={handleChange} required
                   className="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400" />
          </div>

          <div>
            <label className="block text-gray-700">Duration (e.g., 7 days):</label>
            <input type="text" name="duration" value={formData.duration} onChange={handleChange} required
                   className="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400" />
          </div>

          <div>
            <label className="block text-gray-700">Form of Medication:</label>
            <select name="form" value={formData.form} onChange={handleChange} required
                    className="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400">
              <option value="tablet">Tablet</option>
              <option value="capsule">Capsule</option>
              <option value="syrup">Syrup</option>
              <option value="injection">Injection</option>
            </select>
          </div>

          <div>
            <label className="block text-gray-700">Special Instructions:</label>
            <textarea name="instructions" value={formData.instructions} onChange={handleChange}
                      className="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400"></textarea>
          </div>

          <button type="submit" className="w-full py-2 px-4 bg-blue-500 text-white font-semibold rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-400">
            Save Prescription
          </button>
        </form>
      </div>

      {/* Right Component: Previous Prescriptions */}
      <div className="w-1/2 mx-auto bg-gray-50 p-6 shadow-md rounded-md overflow-y-auto">
        <h2 className="text-2xl font-bold mb-6 text-gray-800">Previous Prescriptions</h2>
        {prescriptions.length > 0 ? (
          prescriptions.map((prescription, index) => (
            <div key={index} className="mb-4 p-4 border rounded-md bg-white shadow-sm">
              <p><strong>Patient Name:</strong> {prescription.patientName}</p>
              <p><strong>Age:</strong> {prescription.age}</p>
              <p><strong>Date:</strong> {prescription.date}</p>
              <p><strong>Medication:</strong> {prescription.medication}</p>
              <p><strong>Dosage:</strong> {prescription.dosage}</p>
              <p><strong>Frequency:</strong> {prescription.frequency}</p>
              <p><strong>Duration:</strong> {prescription.duration}</p>
              <p><strong>Form:</strong> {prescription.form}</p>
              <p><strong>Instructions:</strong> {prescription.instructions}</p>
            </div>
          ))
        ) : (
          <p className="text-gray-500">No previous prescriptions.</p>
        )}
      </div>
    </div>
  )
}

export default Prescriptions